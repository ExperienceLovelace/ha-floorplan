# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  validate:
    runs-on: ubuntu-latest

    outputs:
      is_final_version: ${{ steps.check_version.outputs.is_final_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check ha-floorplan package version
        id: check_version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          if [[ "$PACKAGE_VERSION" == *-* ]]; then
            echo "Non-final version detected ($PACKAGE_VERSION)."
            echo "is_final_version=false" >> $GITHUB_OUTPUT
            else
            echo "Final version detected ($PACKAGE_VERSION)."
            echo "is_final_version=true" >> $GITHUB_OUTPUT
          fi
          
  # Build job
  build:
    needs: validate
    if: needs.validate.outputs.is_final_version == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build floorplan-examples with Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - run: npm ci
      - run: npm run build
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./docs
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
